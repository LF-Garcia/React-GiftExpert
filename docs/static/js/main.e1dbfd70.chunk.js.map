{"version":3,"sources":["components/AddCategory.js","helpers/getGifts.js","components/GridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GiftExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","className","type","value","onChange","target","placeholder","getGifts","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GridItem","console","log","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","losading","useFetchGifts","GiftExpertApp","ReactDOM","render","document","getElementById"],"mappings":"6MAoCeA,EAjCK,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,cAAqB,EAEJC,mBAAS,IAFL,mBAEjCC,EAFiC,KAErBC,EAFqB,KAmBxC,OACI,sBAAMC,SAZU,SAACC,GACjBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAQ,IAC1BR,GAAe,SAAAS,GAAU,OAAMP,GAAN,mBAAqBO,OAC9CN,EAAc,MAQlB,SACI,uBACAO,UAAU,eACNC,KAAK,OACLC,MAAQV,EACRW,SArBc,SAACR,GACvBF,EAAcE,EAAES,OAAOF,QAqBfG,YAAa,mD,+BC7BhBC,EAAQ,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DACdC,EADc,iDACmCC,UAAUH,GAD7C,+DAEDI,MAAMF,GAFL,cAEdG,EAFc,gBAGCA,EAAKC,OAHN,uBAGbC,EAHa,EAGbA,KAEDC,EAAOD,EAAKE,KAAM,SAAAC,GAAQ,IAAD,EAC3B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATtB,kBAabM,GAba,4CAAH,sDCkBNO,EAhBE,SAAC,GAAsB,IAArBJ,EAAoB,EAApBA,GAAIC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAE1B,OADAc,QAAQC,IAAIN,EAAIC,EAAOV,GAEpB,mCACK,qBAAKT,UAAU,2DAAf,SACI,qBAAKyB,IAAKhB,EAAKT,UAAU,eAAe0B,IAAKP,SCwB9CQ,EA1BC,SAAC,GAAmB,IAAhBpB,EAAe,EAAfA,SAEHa,ECHY,SAACb,GAAc,IAAD,EAEbhB,mBAAS,CAC/BuB,KAAK,GACLc,SAAS,IAJ0B,mBAEhCC,EAFgC,KAEzBC,EAFyB,KAmBvC,OAZDC,qBAAW,WACPzB,EAASC,GACPyB,MAAM,SAAAC,GACHC,YAAY,WACRJ,EAAS,CACLhB,KAAKmB,EACLE,UAAS,MAEf,UAER,CAAC5B,IAEIsB,EDhBiBO,CAAc7B,GAA9BO,KAGR,OACI,qCACI,oBAAId,UAAU,qDAAd,SAAoEO,IAEpE,qBAAKP,UAAU,MAAf,SAEQoB,EAAOJ,KAAK,SAACC,GAAD,OACR,cAAC,EAAD,eAEQA,GADGA,EAAIC,aEYxBmB,EAzBO,WAAO,IAAD,EAEY9C,mBAAS,IAFrB,mBAEjBQ,EAFiB,KAELT,EAFK,KAKxB,OACI,qCACI,+CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEA,6BAEQS,EAAWiB,KAAK,SAAAT,GAAQ,OAChB,cAAC,EAAD,CAEIA,SAAUA,GADLA,YCTrC+B,IAASC,OACL,cAAC,EAAD,IAAmBC,SAASC,eAAe,W","file":"static/js/main.e1dbfd70.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\n\r\nconst AddCategory = ( {setCategories} ) =>  {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputchange = (e)=>{\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const hadleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (inputValue.trim().length >2 ) {\r\n            setCategories( categories => [ inputValue ,...categories]);\r\n            setInputValue('');\r\n       }\r\n        \r\n        \r\n    }\r\n\r\n\r\n    return (\r\n        <form onSubmit= { hadleSubmit }>\r\n            <input \r\n            className='form-control'\r\n                type='text'\r\n                value={ inputValue }\r\n                onChange= { handleInputchange }\r\n                placeholder= 'Agrega una nueva categoria y presiona enter'\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nexport default AddCategory;\r\n","export const getGifts = async ( category ) =>{\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=yXbn5XTQCpU36yGoOHb4xZcSjG5MAiLj`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map ( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url,\r\n        }\r\n    });\r\n    \r\n    return gifs;\r\n}\r\n","import React from 'react'\r\n\r\nconst GridItem = ({id, title, url}) => {\r\n    console.log(id, title, url);\r\n    return (\r\n       <>\r\n            <div className='card col-sm-2 col-lg-2 animate__animated animate__fadeIn' >\r\n                <img src={url} className='card-img-top' alt={title}/>\r\n                {/* <div className='card-body'>\r\n                    <p className='card-text'>{ title }</p>\r\n                </div> */}\r\n            </div>\r\n      </>\r\n        \r\n    )\r\n}\r\n\r\n\r\nexport default GridItem;\r\n","\r\nimport { useFetchGifts } from '../hooks/useFetchGifs';\r\nimport GridItem from './GridItem'\r\n\r\n\r\nconst GifGrid = ( { category }) => {\r\n\r\n    const { data:images } = useFetchGifts(category);\r\n  \r\n\r\n    return (\r\n        <>\r\n            <h3 className='animate__animated animate__flash animate__delay-2s'>{category}</h3>\r\n            \r\n            <div className='row'>\r\n                {     \r\n                    images.map( (img) => \r\n                        <GridItem \r\n                            key = {img.id}\r\n                            {...img}\r\n                        />\r\n                    )\r\n                }\r\n            </div>\r\n               \r\n            \r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default GifGrid;","\r\nimport { useEffect, useState } from 'react'\r\nimport { getGifts } from '../helpers/getGifts';\r\n\r\nexport const useFetchGifts = (category) => {\r\n\r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading: true,\r\n    })\r\n\r\n   useEffect( () => {\r\n       getGifts(category)\r\n        .then( imgs => {\r\n            setTimeout( ()=>{ \r\n                setState({\r\n                    data:imgs,\r\n                    losading:false,\r\n                })\r\n            },3000)\r\n        })\r\n   }, [category])\r\n\r\n    return state;\r\n} \r\n\r\n","import { useState } from \"react\";\r\nimport  AddCategory  from \"./components/AddCategory\";\r\nimport  GifGrid from \"./components/GifGrid\";\r\n\r\n\r\nconst GiftExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState([]);\r\n\r\n\r\n    return (\r\n        <>\r\n            <h1>GiftExpertApp</h1>\r\n            <AddCategory setCategories={ setCategories } />\r\n            <hr />\r\n        \r\n            <ol>\r\n                {\r\n                    categories.map( category =>\r\n                            <GifGrid \r\n                                key={category}\r\n                                category={category} \r\n                            />\r\n                        )\r\n                }\r\n            </ol>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default GiftExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport GiftExpertApp from './GiftExpertApp'\n\n\n\n\n\n\nReactDOM.render(\n    <GiftExpertApp />, document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}